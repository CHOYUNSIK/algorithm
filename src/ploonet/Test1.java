package ploonet;

/*
* 설명
장기 고객을 위한 경품행사가 열렸습니다. 경품 행사는 한 방향으로만 돌아가는 원형 돌림판을 이용해 진행됩니다.
돌림판에는 4개로 나눠진 360도의 상품영역이 있고 각 영역은 아래와 같습니다.
• 1번 상품 영역: 0도 이상 90도 미만
• 2번 상품 영역: 90도 이상 180도 미만
• 3번 상품 영역: 180도 이상 270도 미만
• 4번 상푼 영역: 270도 이상 360도 미만

돌림판을 돌려 멈췄을 때 화살표가 가리킨 위치에 적힌 상품을 받습니다. 돌럼판을 돌리기 시삭할 때 화살표는 0도를 가리키고 있습니다. 돌림판을 다시 돌릴 때는 마지막으로 화살표가 가리킨 곳에서부터 돌아갑니다.
예를 들어 돌림판을 5번 돌렸고 돌아간 각도가 순서대로 [80, 99, 361, 720, 450]이라고 가정하겠습니다. 돌림판이 멈춘 위치와 당첨된 경품은 아래 표 와 같습니다.


추첨 횟수 			돌아간 각도				화살표가 멈춘 곳			당첨된 상품 			설명
1				80					80					1번 상품				돌림판이 0도에서 80도 돌아 화살표가 80도에 멈췄습니다.
2				99					179					2번 상품				돌림판이 80도에서 99도 돌아 화살표가 179도에 멈췄습니다.
3				361					180					3번 상품				돌림판이 179도에서 360도 한 바퀴를 돌고 1도를 더 돌아 180도에 멈췄습니다.
4				720					180					3번 상품				돌림판이 180도에서 360도 두 바퀴를 돌아 180도에 멈췄습니다.
5				450					270					4번 상품				돌림판이 180도에서 360도 한 바퀴를 돌고 90도를 더 돌아 270도에 멈췄습니다.

고객들에게 당첨된 경품을 보내려면 1번 상품이 1개, 2번 상품이 1개, 3번 상품이 2개, 4번 상품이 1개 필요합니다.
경품을 추첨할 때마다 돌아간 각도 의미하는 1차원 정수배열 degrees 가 매개변수로 주어집니다. 이때 당첨된 경품을 보내려면 4종류의 상품이 각각 몇 개 필요한지를 길이가 4인 1차원 정수 배열에 상품 순서대로 담아 return 하도록 solution 함수를 완성해 주세요.

제한사항
• 1 <= degrees 의 길이 <= 1,000
• 1 <= degrees 의 원소 <= 10,000

입출력 예
degrees 					result
[80, 99, 361, 720, 450]		[1,1,2,1]
[360, 720, 1080, 1440]		[4,0,0,0]
[10000]						[0,0,0,1]



입출력 예 설명

입출력 예#1
문제 설명의 예시와 같습니다

입출력 예 #2
돌림판이 멈춘 위치와 당첨된 경품은 아래 표와 같습니다.
주첨 횟수				돌아간 각도				화살표가 멈춘 곳			당첨된 상품			설명
1					360					0 					1번 상품			돌림판이 0도에서 360도 한 바퀴를 돌아 0도에 멈췄습니다.
2					720					0					1번 상품			돌림판이 0도에서 360도 두 바퀴를 돌아 0도에 멈췄습니다.
3					1080				0					1번 상품			돌림판이 0도에서 360도 세 바퀴를 돌아 0도에 멈췄습니다.
4					1440				0					1번 상품			돌림판이 0도에서 360도 네 바퀴를 돌아 0도에 멈췄습니다.
고객들에게 당침된 경품을 보내려면 1번 상품만 4개 필요합니다. 따라서 [4, 0, 0, 0] 올 return 해야 합니다.

입출력 예#3
돌림판이 멈춘 위치와 당첨된 경품은 아래 표와 같습니다.
추첨 횟수 			돌아간 각도 		화살표가 멈춘 곳 			당첨된 상품			설명
1				10000			280					4번 상품			돌림판이 0도에서 360도 27바퀴를 돋고 280도를 더 돌아 280도에 멈췄습니다.
고객들에게 당첨된 경품을 보내려면 4번 상품만 1개 필요합니다. 따라서 0, 0, 0, 1 retun 해야 합니다.





* */
public class Test1 {
    public int[] solution(int[] degrees) {
        int[] result = new int[4];
        int current = 0;

        for (int deg : degrees) {
            current = (current + deg) % 360;

            if (current < 90) result[0]++;
            else if (current < 180) result[1]++;
            else if (current < 270) result[2]++;
            else result[3]++;
        }

        return result;
    }

    public static void main(String[] args) {
        Test1 sol = new Test1();

        int[] res1 = sol.solution(new int[]{80, 99, 361, 720, 450});
        int[] res2 = sol.solution(new int[]{360, 720, 1080, 1440});
        int[] res3 = sol.solution(new int[]{10000});

        print(res1); // [1, 1, 2, 1]
        print(res2); // [4, 0, 0, 0]
        print(res3); // [0, 0, 0, 1]
    }

    private static void print(int[] arr) {
        System.out.println(java.util.Arrays.toString(arr));
    }
}
